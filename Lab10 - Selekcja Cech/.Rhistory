setwd("F:/MiNI IAD/Sem 1/Machine Learning/Laboratoria/Machine-Learning-Course/Lab10 - Selekcja Cech")
p = 1000
n  = 100
x <- matrix(rnorm(n*p), ncol=p)
x
x.shape
x.nrow
nrow(x)
ncol(x)
mm <- matrix(0, 10, 5)
mm
matrix(0, 10, 5)
matrix(0, 10, )
matrix(0, 10)
matrix(0, 10, 0)
matrix(0, 10, 1)
matrix(0, 1, 10)
b <- matrix(0, 1, p)
b <- matrix(0,1,p)
b
b[1000] <- 1
b
b[0]
b[1]
b[3] <- 1
b[1:12]
b[1] <- 1
b[2] <- 1
b[1:12]
x
x[1]
dims(x)
ncol(x)
x[1]
x[1:]
x[[1]]
x[1,]
b[1,]
b <- matrix(0, 1, p)
b[1] <- 1
b[2] <- 1
b[3] <- 1
b[1,]
b
b[1,]
b = b[1,]
b
b <- matrix(0, 1, p)
b[1] <- 1
b[2] <- 1
b[3] <- 1
b[1,]
b <- matrix(0, 1, p)
b[1] <- 1
b[2] <- 1
b[3] <- 1
b[1,]
b
T(b[1,])
T(b)
t(b)
t(b)%*%x[1,]
t(b)%*%x[1,]
b%*%t(x[1,])
x[1,]
b
b[1,%*%t(x[1,])
b[1,]%*%t(x[1,])
b[1,] %*% t(x[1,])
b[1,]
ncol(b[1,])
b %*% t(matrix(x[1,]))
ncol(matrix(x[1,]))
ncol(b[1,])
ncol(matrix(b[1,]))
ncol(x)
nrow(x)
ncol(matrix(b[1,]))
ncol(matrix(x[1,]))
nrow(matrix(b[1,]))
nrow(matrix(x[1,]))
ncol(t(matrix(x[1,])))
b %*% matrix(x[1,])
ncol(matrix(b[1,]))
nrow(matrix(b[1,]))
ncol(matrix(x[1,]))
nrow(matrix(x[1,]))
b %*% matrix(x[1,])
ncol(matrix(b[1,]))
nrow(matrix(b[1,]))
ncol(matrix(x[1,]))
nrow(matrix(x[1,]))
ncol(matrix(b[1,]))
nrow(matrix(b[1,]))
ncol(matrix(x[1,]))
nrow(matrix(x[1,]))
b %*% matrix(x[1,])
b[1,] %*% matrix(x[1,])
b[1,] %*% x[1,]
nrow(matrix(b[1,]))
ncol(matrix(b[1,]))
nrow(matrix(x[1,]))
ncol(matrix(x[1,]))
b[1,] %*% x[1,]
t(b[1,]) %*% x[1,]
t(b) %*% x[1,]
t(b[1,]) %*% x
t(b[1,]) %*% matrix(x)
t(b[1,]) %*% t(matrix(x))
b[1,] %*% t(matrix(x))
p <- b[1,] %*% t(matrix(x))
nrow(p)
ncol(p)
x%*%b
b <- numeric(p)
p = 1000
b <- numeric(p)
b[1] <- 1
b[2] <- 1
b[3] <- 1
x%*%b
P <- x%*%b
nrow(P)
ncol(P)
install.packages("glmnet1")
install.packages("cv.glmnet1")
install.packages("glmnet")
probs <- 1/(1+exp(-eta))
eta <- x%*%b
probs <- 1/(1+exp(-eta))
# p <- b[1,] %*% t(matrix(x))
nrow(P)
y <- rbinom(n,1,probs)
# ncol(x)
# nrow(x)
#
# nrow(matrix(b[1,]))
# ncol(matrix(b[1,]))
#
# nrow(matrix(x[1,]))
# ncol(matrix(x[1,]))
library(glmnet)
cv.glmnet1 <- cv.glmnet(x,y,family="binomial")
lambda_opt <- cv.glmnet1$lambda.lse
wspolczynniki1 <- model$beta
model <- glmnet(x,y,family="binomial",lambda=lambda_opt)
wspolczynniki1 <- model$beta
wspolczynniki1
cv.glmnet1 <- cv.glmnet(x,y,family="binomial")
lambda_opt <- cv.glmnet1$lambda.lse
model <- glmnet(x,y,family="binomial",lambda=lambda_opt)
wspolczynniki1 <- model$beta
wspolczynniki1
n  = 100
p = 1000
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[1] <- 1
b[2] <- 1
b[3] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
# p <- b[1,] %*% t(matrix(x))
nrow(P)
ncol(P)
# ncol(x)
# nrow(x)
#
# nrow(matrix(b[1,]))
# ncol(matrix(b[1,]))
#
# nrow(matrix(x[1,]))
# ncol(matrix(x[1,]))
library(glmnet)
cv.glmnet1 <- cv.glmnet(x,y,family="binomial")
lambda_opt <- cv.glmnet1$lambda.lse
model <- glmnet(x,y,family="binomial",lambda=lambda_opt)
wspolczynniki1 <- model$beta
wspolczynniki1
eta_ture1 <- which(wspolczynniki1!=0)
eta_true1 <- which(wspolczynniki1!=0)
recall1 <- length(intersect(true,est_true1))/length(true)
est_true1 <- which(wspolczynniki1!=0)
recall1 <- length(intersect(true,est_true1))/length(true)
true <- c(1,2,3)
recall1 <- length(intersect(true,est_true1))/length(true)
prec1 <- length(intersect(true,est_true1))/length(est_true1)
d <- daa.frame(x,y)
biggestformula(glm(y~.,data=d))
d <- data.frame(x,y)
biggestformula(glm(y~.,data=d))
biggest <- formula(glm(y~.,data=d))
min.model <- glmy(y~1)
min.model <- glm(y~1)
m2 <- step(min.model,data=d,direction='frward',scope= biggest, k=log(n))
m2 <- step(min.model,data=d,direction='forward',scope= biggest, k=log(n))
min.model <- glm(y~1)
m2 <- step(min.model,data=d,direction='forward',scope= biggest, k=log(n))
min.model <- glm(y~1,data=d)
m2 <- step(min.model,data=d,direction='forward',scope= biggest, k=log(n))
wspolczynniki2 <- m2$coef
est_true2 <- which(wspolczynniki2!=0)
recall2 <- length(intersect(true,est_true2))/length(true)
prec2 <- length(intersect(true,est_true2))/length(est_true2)
recall2
prec2
recall1
prec1
install.packages("hdi")
m3 <- multi.split(x,y)
library(hdi)
m3 <- multi.split(x,y)
m3
library(hdi)
m3 <- multi.split(x,y)
m3
n  = 100
p = 1000
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
true <- c(1,2,3)
b[1] <- 1
b[2] <- 1
b[3] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
# p <- b[1,] %*% t(matrix(x))
nrow(P)
ncol(P)
# ncol(x)
# nrow(x)
#
# nrow(matrix(b[1,]))
# ncol(matrix(b[1,]))
#
# nrow(matrix(x[1,]))
# ncol(matrix(x[1,]))
library(glmnet)
cv.glmnet1 <- cv.glmnet(x,y,family="binomial")
lambda_opt <- cv.glmnet1$lambda.lse
model <- glmnet(x,y,family="binomial",lambda=lambda_opt)
wspolczynniki1 <- model$beta
model1 <- glmnet(x,y,family="binomial",lambda=lambda_opt)
wspolczynniki1 <- model1$beta
est_true1 <- which(wspolczynniki1!=0)
recall1 <- length(intersect(true,est_true1))/length(true)
prec1 <- length(intersect(true,est_true1))/length(est_true1)
wspolczynniki2 <- m2$coef
est_true2 <- which(wspolczynniki2!=0)
recall2 <- length(intersect(true,est_true2))/length(true)
prec2 <- length(intersect(true,est_true2))/length(est_true2)
library(hdi)
m3 <- multi.split(x,y)
m3
B = 100
coef1 <- numeric(B)
#----- zaad 4
n  = 200
p = 20
B = 100
coef1 <- numeric(B)
true <- c(1,2,3)
n  = 200
p = 20
B = 100
coef1 <- numeric(B)
true <- c(1,2,3)
for(k in 1:B){
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[true] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
d <- data.frame(x,y)
m <- glm(y~.,data=d)
coef1[k] <- m.coef[2]
}
n  = 200
p = 20
B = 100
coef1 <- numeric(B)
true <- c(1,2,3)
for(k in 1:B){
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[true] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
d <- data.frame(x,y)
m <- glm(y~.,data=d)
coef1[k] <- m$coef[2]
}
n  = 200
p = 20
B = 100
coef1 <- list()
for(p in c(5,10,20,40))
{
true <- c(1,2,3)
for(k in 1:B){
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[true] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
d <- data.frame(x,y)
m <- glm(y~.,data=d)
coef1[k] <- m$coef[2]
}
j_j+1
coef[[j]] <- coef1
}
#----- zaad 4
n  = 200
p = 20
B = 100
coef1 <- list()
for(p in c(5,10,20,40))
{
true <- c(1,2,3)
for(k in 1:B){
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[true] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
d <- data.frame(x,y)
m <- glm(y~.,data=d)
coef1[k] <- m$coef[2]
}
j <- j+1
coef[[j]] <- coef1
}
#----- zaad 4
n  = 200
p = 20
B = 100
j <- 0
coef1 <- list()
for(p in c(5,10,20,40))
{
true <- c(1,2,3)
for(k in 1:B){
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[true] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
d <- data.frame(x,y)
m <- glm(y~.,data=d)
coef1[k] <- m$coef[2]
}
j <- j+1
coef[[j]] <- coef1
}
sapply(coefs,var)
boxplot(coefs)
n  = 200
p = 20
B = 100
j <- 0
coefs <- list()
for(p in c(5,10,20,40))
{
coed1 <- numeric(B)
true <- c(1,2,3)
for(k in 1:B){
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[true] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
d <- data.frame(x,y)
m <- glm(y~.,data=d)
coef1[k] <- m$coef[2]
}
j <- j+1
coef[[j]] <- coef1
}
sapply(coefs,var)
boxplot(coefs)
n  = 200
p = 20
B = 100
j <- 0
coefs <- list()
for(p in c(5,10,20,40))
{
coed1 <- numeric(B)
true <- c(1,2,3)
for(k in 1:B){
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[true] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
d <- data.frame(x,y)
m <- glm(y~.,data=d)
coef1[k] <- m$coef[2]
}
j <- j+1
coefs[[j]] <- coef1
}
sapply(coefs,var)
boxplot(coefs)
sapply(coefs,var)
boxplot(coefs)
n  = 200
p = 20
B = 100
j <- 0
coefs <- list()
for(p in c(5,10,20,40))
{
coed1 <- numeric(B)
true <- c(1,2,3)
for(k in 1:B){
x <- matrix(rnorm(n*p), ncol=p)
b <- numeric(p)
b[true] <- 1
eta <- x%*%b
probs <- 1/(1+exp(-eta))
y <- rbinom(n,1,probs)
d <- data.frame(x,y)
m <- glm(y~.,data=d)
coef1[k] <- m$coef[2]
}
j <- j+1
coefs[[j]] <- coef1
}
sapply(coefs,var)
boxplot(coefs)
